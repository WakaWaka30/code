#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

char* bin(int n){
    int i=0,n1=n;
    int str[100];
    int bin=0;
    while(1){
        str[i] = n%2;
        n = n/2;
        i++;
        
        if(n<1)
            break;
        
        
    }
    
    int len = i;
    
    char* bin2 = (char*)malloc(8*sizeof(char));
    
    
    
    //char* bin1 = (char*)malloc((len+1)*sizeof(char));
    
    for(i=0;i<len;i++){
        if(str[len-i-1] == 0)
        
            bin2[i] = '0';
            
        
        else
            bin2[i] = '1';
            
        
    }
    i=0;
    while(i<8){
        if(bin2[i] != '1')
            bin2[i] = '0';
        i++;    
    }
    if(n1 == 128){
        bin2[0] = '1';
        for(i=1;i<8;i++)
            bin2[i] = '0';
    }
    //printf("len:%d\n",len);
    else{
        for(i=0;i<len;i++){
            bin2[7-i] = bin2[len-1-i];
            bin2[len-1-i] = '0';
        }
    }
    
    
    return bin2;    
    
    
    
        
}


int dec(char* bin){
    int dec=0;
    int i=0;
    for(i=7;i>=0;i--)
        if(bin[7-i] == '1')
            dec = dec + pow(2,i);
    return dec;    
}

char* bintohex(char* bin1){
    int n = dec(bin1);
    char* hex = (char*)malloc(2*sizeof(char));
    
    int n1 = n%16;
    
    if(n1<10)
        hex[1] = (char)(n1+48);
    else
        hex[1] = (char)(n1+55);
    
    n = n/16;
    
    n1 = n%16;
    
    if(n1<10)
        hex[0] = (char)(n1+48);
    else
        hex[0] = (char)(n1+55);
    
    return hex;        
    
    
}

int hextodec(char* hex){
    
    int n = (int)hex[0];
    int n1 = (int)hex[1];
    int dec = 0;
    
    if(n1>=48 && n1<=57)
        dec = dec + (n1-48);
    else
        dec = dec + (n1-55);
    
    if(n>=48 && n<=57)
        dec = dec + 16*(n-48);
    else
        dec = dec + 16*(n-55);
    
    return dec;    
}

char** stringtohexASCII(char* str){
    int len = strlen(str);
    char** hex1 = (char**)malloc(len*sizeof(char*));
    int i=0;
    for(i=0;i<len;i++)
        *(hex1+i) = (char*)malloc(2*sizeof(char));
        
    for(i=0;i<len;i++)
        *(hex1+i) = bintohex(bin((int)str[i]));
    
    return hex1;     
    
        

} 

char** stringto8bitASCII(char* str){
    int len = strlen(str);
    char** bin1 = (char**)malloc(len*sizeof(char*));
    int i=0;
    for(i=0;i<len;i++)
        *(bin1+i) = (char*)malloc(8*sizeof(char));
        
    for(i=0;i<len;i++)
        *(bin1+i) = bin((int)str[i]);
    
    return bin1;     
    
        

} 

char* eightbitASCIItostring(char** s, int len){
    char* str = (char*)malloc(len*sizeof(char));
    int i=0;
    for(i=0;i<len;i++)
        str[i] = (char)dec(*(s+i));
    return str;    
    
}

char* hexASCIItostring(char** s, int len){
    char* str = (char*)malloc(len*sizeof(char));
    int i=0;
    for(i=0;i<len;i++)
        str[i] = (char)hextodec(*(s+i));
    return str;    
    
}


int main(){
    char str[10000];
    int x,i=0;
    printf("Press 1 to convert string to eight bit ASCII\nPress 2 to convert ASCII to string\nPress 3 to convert string to hexadecimal ASCII\nPress 4 to convert hexadecimal ASCII to string: ");
    scanf("%d",&x);
    if(x == 1){
        printf("Enter string: ");
        scanf("\n%[^\n]%*c",str);
    
        int len = strlen(str);
    
        char** s = stringto8bitASCII(str);
    
        for(i=0;i<len;i++)
            printf("%s",*(s+i));
    }
    
    else if(x == 2){
        int j=0;
        printf("Enter ASCII code: ");
        char str[10000];
        scanf("\n%[^\n]%*c",str);
        int len = strlen(str);
        if(len%8 != 0){
            printf("Error: ASCII code length must be divisible by 8");
            return 0;
        }
        int y = len/8;
        char** s = (char**)malloc(y*sizeof(char*));
        
        for(i=0;i<y;i++)
            *(s+i) = (char*)malloc(8*sizeof(char));
        
        int k=0;
        for(i=0;i<y;i++)
            for(j=0;j<8;j++){
                *(*(s+i)+j) = str[k];
                //printf("i: %d --j: %d\n",i,j);
                k++;
            }
                
                
            
        /*for(i=0;i<y;i++)
            printf("%s\n",*(s+i));*/
            
            
    
        char* str1 = eightbitASCIItostring(s,y);
        
        printf("%s",str1);
    
    }
    
    else if(x == 3){
        printf("Enter string: ");
        scanf("\n%[^\n]%*c",str);
    
        int len = strlen(str);
    
        char** s = stringtohexASCII(str);
    
        for(i=0;i<len;i++)
            printf("%s",*(s+i));
        
    }
    
    else if(x == 4){
        int j=0;
        printf("Enter ASCII code: ");
        char str[10000];
        scanf("\n%[^\n]%*c",str);
        int len = strlen(str);
        if(len%2 != 0){
            printf("Error: ASCII code length must be divisible by 8");
            return 0;
        }
        int y = len/2;
        char** s = (char**)malloc(y*sizeof(char*));
        
        for(i=0;i<y;i++)
            *(s+i) = (char*)malloc(2*sizeof(char));
        
        int k=0;
        for(i=0;i<y;i++)
            for(j=0;j<2;j++){
                *(*(s+i)+j) = str[k];
                //printf("i: %d --j: %d\n",i,j);
                k++;
            }
                
                
            
        /*for(i=0;i<y;i++)
            printf("%s\n",*(s+i));*/
            
            
    
        char* str1 = hexASCIItostring(s,y);
        
        printf("%s",str1);
    
    }
    
    else
        printf("Invalid Input");
    return 0;
}
