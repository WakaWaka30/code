/*Given a four digit number ‘n’, find the largest factor among the left rotated numbers. 
Here left rotated numbers of a number ‘n’ is formed by rotating ‘n’ left 1 to 3 times.*/ 

#include <stdio.h>
#include <math.h>
int checkGreatest(int a, int b, int c, int d){
    int num[] = {a,b,c,d};
    int greatest=0,i=0;
    for(i=0;i<4;i++){
        if(num[i]>greatest)
            greatest = num[i];
        else
            continue;
    }
    return greatest;
}
    
    

int largestFactor(int n){
    int largest=1,i=1;
    if(n==1)
        return 1;
    else if (n%2 == 0)
        return n/2;
    else{
        for(i=1;i<=n/2;i++)
            if(n%i==0 && i>largest)
                largest = i;
        return largest;
    }
}
int reverse(int n){
    int rev=0;
    while(1){
        rev = rev*10+(n%10);
        n = n/10;
        if(n<1)
            break;
    }
    return rev;
}
int leftShift(int n){
    int a,b,count=0;
    b=n;
    
    while(1){
        count = count + 1;
        b = b/10;
        if(b<1)
            break;
    }
    n = reverse(n);
    a = n%10;
    n = n/10;
    n = a*pow(10,(count-1))+n;
    n = reverse(n);
    return n;
}
int main()
{
    int a,b,c,d,e,f,g,h,result;
    printf("Enter number: ");
    scanf("%d",&a);
    b = leftShift(a);
    c = leftShift(b);
    d = leftShift(c);
    e = largestFactor(a);
    f = largestFactor(b);
    g = largestFactor(c);
    h = largestFactor(d);
    
    result = checkGreatest(e,f,g,h);
    
    printf("%d is the largest factor among rotated numbers\n",result);
    if(result == e)
        printf("%d is the factor of %d",result,a);
    else if(result == f)
        printf("%d is the factor of %d",result,b);
    else if(result == g)
        printf("%d is the factor of %d",result,c);
    else
        printf("%d is the factor of %d",result,d);
        
    
    
    

    return 0;
}
