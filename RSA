#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int gcd(int m, int n){
    if(m%n == 0)
        return n;
     
    else if(m == n)
        return m;
    else if(m>n)
        return gcd(n,m%n);
    else
        return gcd(m,n%m);
}
        
    
    
        
        
    
        

int CheckPrime(int n){
    int i=0;
    for(i=2;i<=n/2;i++){
        if(n%i == 0)
            break;
            
    }
    
    if(i == (n/2)+1 && n != 1)
        return 1;
    else
        return 0;
    
}

int CheckDivide(int x, int y){
    //how many times does x divide y
    int count=0,j=1,z=x;
    while(1){
        if(y%x == 0){
            
            count++;
            j++;
            x = pow(z,j);
            
        }
        else
            break;
    }
    return count;
    
}

int* PrimeFactors(int n){
    int *p;
    int i=0, count=0,j=1;
    for(i=2;i<=n;i++)
        if(n%i == 0 && CheckPrime(i) == 1)
            count++;
    p = (int*)malloc((2*count)*sizeof(int));
    *p = 2*count;
    for(i=2;i<=n;i++){
        if(n%i == 0 && CheckPrime(i) == 1){
            *(p+j) = i;
            *(p+j+1) = CheckDivide(i,n);
            
            j = j+2;
            
        }
        else 
            continue;
    }
    return p;
          
}

int Totient(int n){
    if(CheckPrime(n) == 1)
        return n-1;
    else{    
        int phin=1;
        int* p = PrimeFactors(n);
        int a = *p;
        int i=0,k,l;
        for(i=1;i<=a;i=i+2){
            k=*(p+i);
            l=*(p+i+1);
            phin=phin*(pow(k,l)-pow(k,l-1));
        }
        return phin;
    }
            
    
    
}

int mulinverse(int x, int n){
    if(x>n || gcd(n,x) != 1)
        return 0;
    else{
        int t1 = 0;
        int t2 = 1,t,q,r1=n,r2=x,r;
        //printf("q\tr1\tr2\tr\tt1\tt2\tt");
        while(1){
            q = r1/r2;
            r = r1%r2;
            t = t1-q*t2;
            //printf("%d\t%d\t%d\t%d\t%d\t%d\t%d\n",q,r1,r2,r,t1,t2,t);
            if(r1 != 1){
                r1 = r2;
                r2 = r;
                t1 = t2;
                t2 = t;
            }
            else
                break;
            
        }
        return t1;
    }
    
    
}
void display(int* ptr){
    int a = *ptr;
    int i=0;
   
    for(i=1;i<=a;i=i+2)
        printf("%d\t%d\n",*(ptr+i),*(ptr+i+1));
    
    
}

int main(){
    int x,y;
    printf("Enter number 1: ");
    scanf("%d",&x);
    printf("Enter number 2: ");
    scanf("%d",&y);
    printf("Multiplicative inverse of %d in mod%d is %d",x,y,mulinverse(x,y));
    
    
    
    return 0;
    
}
