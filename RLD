/*Given a number N,  check if it is reverse length divisible. A number is said to be reverse length divisible if the first i digits of the number is divisible by (l-i-1) where 
l is the number of digits in N and 0 < i <= l. 

For example, 52267 is reverse length divisible because:

5 is divisible by 5

52 is divisible by 4

522 is divisible by 3

5226 is divisible by 2

52267 is divisible by 1.

Print "Yes" if the number is reverse length divisible otherwise print "No" (without quotes). */

#include <stdio.h>
int reverse(int n){
    int rev = 0;
    while(1){
        rev = rev*10+(n%10);
        n = n/10;
        if(n<1)
            break;
    }
    return rev;
}
int printNdigit(int n, int x){
    int w=0;
    n = reverse(n);
    while(1){
        w = w*10 + (n%10);
        x--;
        n = n/10;
        if(n<1 || x == 0)
            break;
        
    }
    return w;
}
int checkRLD(int n){
    int i=0,count=0,a,b,flag = 1;
    a = n;
    
    while(1){
        count = count + 1;
        a = a/10;
        if(a<1)
            break;
    }
    
    for(i=1;i<=count;i++){
        b = printNdigit(n,i);
        if(b%(count-i+1) == 0)
            continue;
        else
            break;
    
    }
    if(i>count)
        return 1;
    else
        return 0;
}

int main()
{
    int n,res;
    printf("Enter number: ");
    scanf("%d",&n);
    
    if(n>10000000){
        printf("Error: Value exceeds predefined boundary\n\n");
        return main();
    }
    res = checkRLD(n);
    if(res == 1)
        printf("Yes");
    else
        printf("No");
    return 0;
}
